{"version":3,"file":"course-lazy.min.js","sources":["../src/course-lazy.js"],"sourcesContent":["/**\n * This file is part of Moodle - http://moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @package\n * @copyright Copyright (c) 2016 Open LMS (https://www.openlms.net)\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Course main functions.\n */\ndefine(\n    [\n        'jquery',\n        'theme_snap/util',\n        'theme_snap/section_asset_management',\n        'theme_snap/course_modules',\n        'core/str'\n    ],\n    function($, util, sectionAssetManagement, courseModules, str) {\n\n    /**\n     * Return class(has private and public methods).\n     * @param {object} courseConfig\n     */\n    return function(courseConfig) {\n\n        var self = this;\n\n        self.courseConfig = courseConfig;\n\n        /**\n         * Are we on the main course page - i.e. TOC is visible.\n         * @returns {boolean}\n         */\n        var onCoursePage = function() {\n            return $('body').attr('id').indexOf('page-course-view-') === 0;\n        };\n\n        /**\n         * Scroll to a mod via search\n         * @param {string} modid\n         */\n        var scrollToModule = function(modid) {\n            // Sometimes we have a hash, sometimes we don't\n            // strip hash then add just in case\n            $('#toc-search-results').html('');\n            var targmod = $(\"#\" + modid.replace('#', ''));\n            // http://stackoverflow.com/questions/6677035/jquery-scroll-to-element\n            util.scrollToElement(targmod);\n\n            var searchpin = $(\"#searchpin\");\n            if (!searchpin.length) {\n                searchpin = $('<i id=\"searchpin\"></i>');\n            }\n\n            $(targmod).find('.instancename').prepend(searchpin);\n            $(targmod).attr('tabindex', '-1').focus();\n            $('#course-toc').removeClass('state-visible');\n        };\n\n        /**\n         * Mark the section shown to user with a class in the TOC.\n         */\n        this.setTOCVisibleSection = function() {\n            var sectionIdSel = '.section.main.state-visible, #coursetools.state-visible, #snap-add-new-section.state-visible';\n            var currentSectionId = $(sectionIdSel).attr('id');\n\n            // Remove snap-visible-section class and reset aria-current to false for all chapters\n            $('#chapters li').removeClass('snap-visible-section');\n            $('#chapters li a').attr('aria-current', 'false');\n\n            // Find the correct chapter link and update class and aria-current\n            var visibleSectionLink = $('#chapters a[href$=\"' + currentSectionId + '\"]');\n            visibleSectionLink.parent('li').addClass('snap-visible-section');\n            visibleSectionLink.attr('aria-current', 'true');\n        };\n\n        /**\n         * Check if current url is having specific parameter on it.\n         * @param {string} checkParameter\n         */\n        var checkToolParameter = function(checkParameter) {\n            return window.location.href.indexOf(checkParameter) != -1;\n        };\n\n        /**\n         * When on course page, show the section currently referenced in the location hash.\n         */\n        this.showSection = function() {\n            if (!onCoursePage()) {\n                // Only relevant for main course page.\n                return;\n            }\n\n            // We know the params at 0 is a section id.\n            // Params will be in the format: #section-[number]&module-[cmid], e.g: #section-1&module-7255.\n            var urlParams = location.hash.split(\"&\"),\n                section = urlParams[0],\n                mod = urlParams[1] || null;\n\n            // Redirect to the correct section when doing /course/section.php.\n            if (section === '' && location.pathname === '/course/section.php' && self.courseConfig.sectionnum) {\n                section = '#section-' + self.courseConfig.sectionnum;\n            }\n\n            var sectionId = false;\n            if (section.indexOf('#sectionid') != -1) {\n                sectionId = section.match(/#sectionid-(\\d+)-title/)[1];\n            }\n\n            // Check if we are using permalinks like #sectionid-{id}-title.\n            if (sectionId) {\n                // Search element with section-id.\n                var $chapter = $('.chapters .chapter-title[section-id=\"' + sectionId + '\"]');\n                if ($chapter.length > 0) {\n                    // Get the section-number associated.\n                    section = $chapter.attr('section-number');\n                    section = '#section-' + section;\n                }\n            }\n\n            // We are done here. H5P will handle the section shown within its iframe.\n            if (section.startsWith('#h5pbook')) {\n                return;\n            }\n\n            var sectionSetByServer = '';\n\n            if ($('.section.main.state-visible.set-by-server').length) {\n                sectionSetByServer = '#' + $('.section.main.state-visible.set-by-server').attr('id');\n                $('.section.main.state-visible.set-by-server').removeClass('set-by-server');\n            } else {\n                $('.course-content .section.main, #moodle-blocks,#coursetools, #snap-add-new-section,' +\n                    '#tiles-section').removeClass('state-visible');\n            }\n\n            if (section == '') {\n                var qs = location.search.substring(1);\n                var sparameters = qs.split('&');\n                sparameters.forEach(function(param) {\n                    if (param.indexOf('section=') >= 0) {\n                        param.replace(param);\n                        section = '#' + param.replace('=', '-');\n                    }\n                });\n            }\n\n            if (section !== '' && section !== sectionSetByServer) {\n                $(sectionSetByServer).removeClass('state-visible');\n            }\n\n            // Dashboard in Tiles should be hidden except in #coursetools section.\n            let btnEditing = '.btn-editing';\n            let courseTools = '#coursetools';\n            let tilesEditing = $(courseTools).hasClass('editing-tiles');\n            if (tilesEditing) {\n                $(courseTools).removeClass('state-visible');\n                $(courseTools).addClass('d-none');\n\n                // Change duplicate data-action in label activities for Tiles.\n                let labelDuplicateButton = $('.launch-tiles-standard.modtype_label .actions .editing_duplicate');\n                if (labelDuplicateButton) {\n                    $(labelDuplicateButton).attr(\"data-action\", \"tiles-duplicate\");\n                }\n            }\n            let sectionParameter = checkToolParameter('section-');\n            let dashboardParameter = checkToolParameter('coursetools');\n            if (sectionParameter && !dashboardParameter) {\n                $('#tiles-section').addClass('state-visible');\n                $(courseTools).removeClass('state-visible');\n                $(courseTools).addClass('d-none');\n            }\n            if (!sectionParameter && dashboardParameter) {\n                let tilesDashboard = $('#snap-course-tools').hasClass('tiles-dashboard');\n                if (tilesDashboard) {\n                    $('#tiles-section').removeClass('state-visible');\n                    $(courseTools).addClass('state-visible');\n                    $(courseTools).removeClass('d-none');\n                    if ($(btnEditing).length) {\n                        let urlEditing = document.querySelector(btnEditing).href;\n                        let existToolParameter = urlEditing.includes('#coursetools');\n                        if (!existToolParameter) {\n                            str.get_strings([\n                                {key: 'editcoursecontent', component: 'theme_snap'},\n                                {key: 'editmodetiles', component: 'theme_snap'},\n                                {key: 'turneditingoff', component: 'moodle'},\n                            ]).done(function(stringsjs) {\n                                let btnEditText = document.querySelector(btnEditing).text;\n                                if (btnEditText == stringsjs[1]) {\n                                    document.querySelector(btnEditing).innerHTML = stringsjs[0];\n                                } else {\n                                    document.querySelector(btnEditing).innerHTML = stringsjs[2];\n                                }\n                            });\n                            document.querySelector(btnEditing).href = urlEditing + '#coursetools';\n                        }\n                    }\n                }\n                // Remove class d-none to show Course Dashboard after clicking in a section first.\n                let snapCourseDashboard = $('#snap-course-tools').hasClass('snap-course-dashboard');\n                if (snapCourseDashboard) {\n                    $(courseTools).removeClass('d-none');\n                }\n            }\n\n            // Course tools special section.\n            if (section == '#coursetools') {\n                $('#moodle-blocks').addClass('state-visible');\n            }\n\n            // If a modlue was in the hash then scroll to it.\n            if (mod !== null) {\n                $(section).addClass('state-visible');\n                scrollToModule(mod);\n            } else {\n                $(section).addClass('state-visible').focus();\n                // Faux link click behaviour - scroll to page top.\n                scrollBack();\n            }\n\n            // Default niceties to perform.\n            var visibleChapters = $(\n                '.section.main.state-visible,' +\n                '#coursetools.state-visible,' +\n                '#snap-add-new-section.state-visible'\n            );\n            if (!visibleChapters.length) {\n                if (section !== '') {\n                    $(section).addClass('state-visible').focus();\n                } else if ($('.section.main.current').length) {\n                    $('.section.main.current').addClass('state-visible').focus();\n                } else {\n                    $('#section-0').addClass('state-visible').focus();\n                }\n                scrollBack();\n            }\n            if (section == '' && self.courseConfig.format == 'tiles') {\n                $('#tiles-section').addClass('state-visible').focus();\n            }\n\n            // When usejsnavforsinglesection is enabled, tiles-section will be shown instead of single-section.\n            // We need to ensure that tiles-section is visible when course tools is not.\n            if (self.courseConfig.format == 'tiles') {\n                if (!$(courseTools).hasClass('state-visible')\n                    && !$('#tiles-section').hasClass('state-visible')) {\n                    $('#tiles-section').addClass('state-visible');\n                }\n                if ($('#page-course-view-tiles .tiles[data-for=\"course_sectionlist\"]').length) {\n                    if (!$(courseTools).hasClass('state-visible')\n                        && !$('#page-course-view-tiles .tiles').hasClass('state-visible')) {\n                        $('#page-course-view-tiles .tiles').addClass('state-visible');\n                    }\n                }\n                if (!dashboardParameter) {\n                    $('#snap-course-dashboard').addClass('state-visible');\n                }\n            }\n\n            // Store last activity/resource accessed on sessionStorage\n            $('li.snap-activity:visible, li.snap-resource:visible').on('click', 'a.mod-link', function() {\n                sessionStorage.setItem('lastMod', $(this).parents('[id^=module]').attr('id'));\n            });\n\n\n            this.setTOCVisibleSection();\n        };\n\n        /**\n         * Scroll to the last activity or resource accessed,\n         * if there is nothing stored in session go to page top.\n         */\n        var scrollBack = function() {\n            var storedmod = sessionStorage.getItem('lastMod');\n            if (storedmod === null) {\n                window.scrollTo(0, 0);\n            } else {\n                util.scrollToElement($('#' + storedmod + ''));\n                sessionStorage.removeItem('lastMod');\n            }\n        };\n\n        /**\n         * Captures hash parameters and triggers the render method.\n         */\n        var renderFromHash = function() {\n            var hash = $(location).attr('hash');\n            var params = hash.replace('#', '').split('&');\n            var section = false;\n            var sectionId = false;\n            var mod = 0;\n\n            $.each(params, function(idx, param) {\n                if (param.indexOf('sectionid') != -1) {\n                    sectionId = param.match(/sectionid-(\\d+)-title/)[1];\n                } else if (param.indexOf('section') != -1) {\n                    section = param.split('section-')[1];\n                } else if (param.indexOf('module') != -1) {\n                    mod = param.split('module-')[1];\n                }\n            });\n\n            // Check if we are using permalinks like #sectionid-{id}-title.\n            if (sectionId) {\n                // Search element with section-id.\n                var $chapter = $('.chapters .chapter-title[section-id=\"' + sectionId + '\"]');\n                if ($chapter.length > 0) {\n                    // Get the section-number associated.\n                    section = $chapter.attr('section-number');\n                }\n            }\n\n            if (!section) {\n                var qs = location.search.substring(1);\n                var sparameters = qs.split('&');\n                sparameters.forEach(function(param) {\n                    if (param.indexOf('section=') >= 0) {\n                        param.replace(param);\n                        section = param.replace('section=', '');\n                    }\n                });\n            }\n            if (section && $('.chapters .chapter-title[href=\"#section-' + section + '\"]').length > 0) {\n                sectionAssetManagement.renderAndFocusSection(section, mod);\n            }\n        };\n\n        /**\n         * Initialise course JS.\n         */\n        var init = function() {\n            sectionAssetManagement.init(self);\n            courseModules.init(courseConfig);\n\n            // Only load the conditionals library if it's enabled for the course, viva la HTTP2!\n            if (self.courseConfig.enablecompletion) {\n                require(\n                    [\n                        'theme_snap/course_conditionals-lazy'\n                    ], function(conditionals) {\n                        conditionals(courseConfig);\n                    }\n                );\n            }\n\n            // SL - 19th aug 2014 - check we are in a course and if so, show current section.\n            if (onCoursePage()) {\n                self.showSection();\n                $(document).on('snapTOCReplaced', function() {\n                    self.setTOCVisibleSection();\n                    if (self.courseConfig.partialrender) {\n                        sectionAssetManagement.setTocObserver();\n                    }\n                });\n                // Sets the observers for rendering sections on demand.\n                if (self.courseConfig.partialrender) {\n                    renderFromHash();\n                    $(window).on('hashchange', function() {\n                        renderFromHash();\n                    });\n                    // Current section might be hidden, at this point should be visible.\n                    var sections = $('.course-content li[id^=\"section-\"]');\n                    var urlParams = location.hash.split(\"&\"),\n                        sectionParam = urlParams[0];\n                    if (sections.length == 1 &&\n                        sectionParam != '#coursetools' &&\n                        sectionParam != '#snap-add-new-section') {\n                        sections.addClass('state-visible');\n                        var section = sections.attr('id').split('section-')[1];\n                        if (self.courseConfig.toctype == 'top' && self.courseConfig.format == 'topics' && section > 0) {\n                            var title = sections.find('.sectionname').html();\n                            var elements = $('.chapter-title');\n                            var tmpid = 0;\n                            $.each(elements, function(key, element) {\n                                if ($(element).attr('section-number') == section) {\n                                    tmpid = key;\n                                }\n                            });\n                            sections.find('.sectionname').html(title);\n                            sections.find('.sectionnumber').html(tmpid + '.');\n                        }\n                    }\n\n\n                }\n            }\n        };\n\n        /**\n         * Snap modchooser listener to add current section to urls.\n         */\n        var modchooserSectionLinks = function() {\n            $('.section-modchooser-link').click(function() {\n                // Grab the section number from the button.\n                var sectionNum = $(this).attr('data-sectionid');\n                $('.snap-modchooser-addlink').each(function() {\n                    // Update section in mod link to current section.\n                    var newLink = this.href.replace(/(section=)[0-9]+/ig, '$1' + sectionNum);\n                    $(this).attr('href', newLink);\n                });\n            });\n        };\n\n        // Intialise course lib.\n        init();\n        modchooserSectionLinks();\n    };\n});\n"],"names":["define","$","util","sectionAssetManagement","courseModules","str","courseConfig","self","this","onCoursePage","attr","indexOf","setTOCVisibleSection","currentSectionId","removeClass","visibleSectionLink","parent","addClass","checkToolParameter","checkParameter","window","location","href","showSection","urlParams","hash","split","section","mod","pathname","sectionnum","sectionId","match","$chapter","length","startsWith","sectionSetByServer","search","substring","forEach","param","replace","courseTools","hasClass","labelDuplicateButton","sectionParameter","dashboardParameter","urlEditing","document","querySelector","includes","get_strings","key","component","done","stringsjs","text","innerHTML","modid","html","targmod","scrollToElement","searchpin","find","prepend","focus","scrollToModule","scrollBack","format","on","sessionStorage","setItem","parents","storedmod","getItem","scrollTo","removeItem","renderFromHash","params","each","idx","renderAndFocusSection","init","enablecompletion","require","conditionals","partialrender","setTocObserver","sections","sectionParam","toctype","title","elements","tmpid","element","click","sectionNum","newLink"],"mappings":"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"}