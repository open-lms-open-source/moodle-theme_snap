{"version":3,"file":"cover_image.min.js","sources":["../src/cover_image.js"],"sourcesContent":["/**\n * This file is part of Moodle - http://moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @package\n * @copyright Copyright (c) 2015 Open LMS (https://www.openlms.net)\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/log', 'core/ajax', 'core/notification', 'theme_snap/ajax_notification', './cropper'],\n    function($, log, ajax, notification, ajaxNotify, Cropper) {\n\n        var savedImageURL = $('#page-header').css(\"background-image\");\n        var temporalImageURL = 'none';\n        var temporalImageID = 0;\n        var temporalFileName = '';\n        var cropper = null;\n        var cropperRatio = 6/1;\n        if ($('#page-site-index').length) {\n            cropperRatio = 6/2;\n        }\n        // TODO - in Moodle 3.1 we should use the core template for this.\n        var addCoverImageAlert = function(id, msg, position = null) {\n            if (position === \"dialogue\") {\n                var alertPosition = '.snap_cover_image_description';\n            } else {\n                var alertPosition = '#snap-coverimagecontrol';\n            }\n            var closestr = M.util.get_string('closebuttontitle', 'moodle');\n            if (!$(id).length) {\n                $(alertPosition).before(\n                    '<div id=\"' + id + '\" class=\"snap-alert-cover-image alert alert-warning\" role=\"alert\">' +\n                    msg +\n                    '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"' + closestr + '\">' +\n                    '<span aria-hidden=\"true\">&times;</span>' +\n                    '</button>' +\n                    '</div>'\n                );\n            }\n        };\n\n        /**\n         * Get human file size from bytes.\n         * http://stackoverflow.com/questions/10420352/converting-file-size-in-bytes-to-human-readable.\n         * @param {int} size\n         * @returns {string}\n         */\n        var humanFileSize = function(size) {\n            var i = Math.floor(Math.log(size) / Math.log(1024));\n            return (size / Math.pow(1024, i)).toFixed(2) * 1 + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];\n        };\n\n        /**\n         * First state - image selection button visible.\n         */\n        var state1 = function() {\n            temporalImageURL = 'none';\n            temporalImageID = 0;\n            temporalFileName = '';\n            $('#page-header').css('background-image', savedImageURL);\n            if (savedImageURL === \"none\") {\n                $('.path-course-view #page-header').removeClass('mast-image');\n                $('.path-course-view #page-header .breadcrumb-item a').removeClass('mast-breadcrumb');\n            }\n            $('#snap-alert-cover-image-size').remove();\n            $('#snap-alert-cover-image-bytes').remove();\n            $('#snap-coverfiles').val('');\n            $('#snap-changecoverimageconfirmation .ok').removeClass('ajaxing');\n            $('#snap-changecoverimageconfirmation').removeClass('state-visible');\n            $('label[for=\"snap-coverfiles\"]').removeClass('ajaxing');\n            $('label[for=\"snap-coverfiles\"]').addClass('state-visible');\n            $('body').removeClass('cover-image-change');\n        };\n\n        /**\n         * Second state - confirm / cancel buttons visible.\n         */\n        var state2 = function() {\n            $('#snap-alert-cover-image-upload-failed').remove();\n            $('#snap-changecoverimageconfirmation').removeClass('disabled');\n            $('label[for=\"snap-coverfiles\"]').removeClass('state-visible');\n            $('#snap-changecoverimageconfirmation').addClass('state-visible');\n            $('body').removeClass('cover-image-change');\n        };\n\n        /**\n         * Get original image url.\n         * @param {string} url\n         */\n        var getOriginalImageURL = function(url) {\n            var newURL = url;\n            newURL = newURL.replace(\"url(\", \"\");\n            newURL = newURL.replace(\")\", \"\");\n            newURL = newURL.replace(/['\"]+/g, \"\");\n            newURL = newURL.replace(\";\", \"\");\n            newURL = newURL.replace(\"croppedimage\", \"coverimage\");\n            newURL = newURL.replace(\"course-image-cropped\", \"course-image\");\n            newURL = newURL.replace(\"category-image-cropped\", \"category-image\");\n            newURL = newURL.replace(\"site-image-cropped\", \"site-image\");\n            return newURL;\n        };\n\n        /**\n         * Get cropped image url.\n         * @param {string} url\n         */\n        var getCroppedImageURL = function(url) {\n            var newURL = url;\n            newURL = newURL.replace(\"url(\", \"\");\n            newURL = newURL.replace(\")\", \"\");\n            newURL = newURL.replace(/['\"]+/g, \"\");\n            newURL = newURL.replace(\";\", \"\");\n            return newURL;\n        };\n\n        /**\n         * Load current image.\n         */\n        var loadCurrentImage = function() {\n            var currentImageUrl = savedImageURL;\n            if (currentImageUrl === \"none\") {\n                $('.snap_cover_image_save_button').addClass(\"d-none\");\n                return \"\";\n            }\n            $('.snap_cover_image_save_button').removeClass(\"d-none\");\n            currentImageUrl = getOriginalImageURL(currentImageUrl);\n            return currentImageUrl;\n        };\n\n        /**\n         * Apply listeners to aspect ratio options.\n         */\n        var aspectRatioOptions = function() {\n            if ($('#page-course-view-topics, #page-course-view-weeks').length) {\n                // If the Table of contents display option is set to Top.\n                if ($('#page-header #course-toc').length) {\n                    cropperRatio = 6/2;\n                    cropper.setAspectRatio(cropperRatio);\n                } else {\n                    cropperRatio = 6/1;\n                    cropper.setAspectRatio(cropperRatio);\n                }\n            }\n        };\n\n        /**\n         * Moodle dialogue box.\n         * @param {string} courseShortName\n         * @param {int} categoryId\n         * @param {object} fpoptions\n         * @param {int} siteMaxBytes\n         */\n        var moodledialogue = function(courseShortName, categoryId, fpoptions, siteMaxBytes) {\n            var maxbytesstr = humanFileSize(siteMaxBytes);\n            let title = M.util.get_string('imageproperties', 'theme_snap');\n            let coverImageDesc = M.util.get_string('coverimagedesc', 'theme_snap', maxbytesstr);\n            let coverImageCropperDesc = M.util.get_string('coverimagecropperdesc', 'theme_snap');\n            let coverImageSettingsWarning = M.util.get_string('coverimagesettingswarning', 'theme_snap');\n            let browseRepositories = M.util.get_string('browserepositories', 'theme_snap');\n            let selectImageString = M.util.get_string('selectimage', 'theme_snap');\n            let deleteImageString = M.util.get_string('deleteimage', 'theme_snap');\n            let previewDisplay = \"'display:none'\";\n            let currentImageURL = '';\n            if (temporalImageURL !== 'none') {\n                currentImageURL = temporalImageURL;\n            } else {\n                currentImageURL = loadCurrentImage();\n                temporalImageURL = currentImageURL;\n            }\n            if (currentImageURL !== \"\") {\n                 previewDisplay = \"'display:block'\";\n            }\n\n            let content =\n                '<div class=\"mb-1 snap_cover_image_dialogue\">' +\n                    '<p class=\"snap_cover_image_description\">' + coverImageDesc + '</p>' +\n                    '<p class=\"snap_cover_image_cropper_description d-none\">' + coverImageCropperDesc + '</p>' +\n                    '<p class=\"snap_cover_image_cropper_description d-none\">' + coverImageSettingsWarning + '</p>' +\n                    '<div class=\"input-group input-append w-100 snap_cover_image_options\">' +\n                        '<button class=\"btn btn-secondary snap_cover_image_browser\" id=\"id_snap_cover_image_browser\">' +\n                        browseRepositories + '</button>' +\n                        '<button class=\"btn btn-secondary snap_cover_image_delete_image_button d-none\" ' +\n                        'id=\"id_snap_cover_image_delete_image\">' +\n                        deleteImageString + '</button>' +\n                    '</div>' +\n                // Add the image preview.\n                '<div class=\"mdl-align\">' +\n                    '<div class=\"snap_cover_image_preview_box\">' +\n                        '<img id=\"id_snap_cover_image_preview\" class=\"snap_cover_image_preview\" alt=\"\" ' +\n                            'style=' + previewDisplay +\n                            'src=' + currentImageURL + '>' +\n                    '</div>' +\n                '</div>' +\n                // Add the save button.\n                '<div class=\"snap_cover_image_save\">' +\n                        '<button class=\"btn btn-primary snap_cover_image_save_button d-none\" ' +\n                        'id=\"id_snap_cover_image_save_button\">' +\n                         selectImageString + '</button>' +\n                    '</div>' +\n                '</div>';\n\n            var dialogue = new M.core.dialogue({\n                headerContent: title,\n                bodyContent: content,\n                width: '800px',\n                modal: true,\n                visible: false,\n                render: true,\n                additionalBaseClass: 'snap_cover_image_dialogue',\n            });\n            dialogue.show();\n\n            if (savedImageURL !== 'none') {\n                $('.snap_cover_image_delete_image_button').removeClass('d-none');\n            }\n\n            // Preview the original image in the modal.\n            if (currentImageURL !== \"\") {\n                $('.snap_cover_image_save_button').removeClass(\"d-none\");\n                // Initialize preview image cropper for the current saved image.\n                var imageToCrop = document.getElementById('id_snap_cover_image_preview');\n                cropper = new Cropper(imageToCrop, {\n                    viewMode: 3,\n                    aspectRatio: cropperRatio,\n                    dragMode: \"none\",\n                    zoomable: false,\n                    minCropBoxWidth: 300,\n                });\n                aspectRatioOptions();\n                $('.snap_cover_image_cropper_description').removeClass('d-none');\n                $('#id_snap_cover_image_save_button').click(function() {\n                    if (cropper.getCroppedCanvas() !== null) {\n                        var croppedImage = cropper.getCroppedCanvas().toDataURL(\"image/png\");\n                        // Ensure that the page-header in courses has the mast-image class.\n                        $('.path-course-view #page-header').addClass('mast-image');\n                        $('.path-course-view #page-header .breadcrumb-item a').addClass('mast-breadcrumb');\n\n                        $('#page-header').css('background-image', 'url(' + croppedImage + ')');\n                        state2();\n                        saveImage({}, courseShortName, categoryId, cropper);\n                    }\n                });\n            }\n\n            // Delete image option.\n            $('.snap_cover_image_delete_image_button').click(function(e) {\n                e.preventDefault();\n                cropper = null;\n                let cancelString = M.util.get_string('cancel', 'moodle');\n                let confirmString = M.util.get_string('yes', 'moodle');\n                let confirmDeleteString = M.util.get_string('confirmdeletefile', 'theme_snap');\n                var cancelButton = '<button id=\"delete_image_cancel_button\" class=\"btn btn-secondary\">' +\n                    cancelString + '</button>';\n                var confirmButton = '<button id=\"delete_image_confirm_button\" ' +\n                    'class=\"btn btn-primary\">' + confirmString + '</button>';\n                dialogue.hide();\n\n                let deleteDialogueContent =\n                    '<div class=\"mb-1 snap_cover_image_delete_dialogue\">' +\n                        '<p class=\"snap_cover_image_delete_description\">' + confirmDeleteString + '</p>' +\n                        // Add the delete confirmation buttons.\n                        '<div class=\"snap_cover_image_delete_confirmation\">' + cancelButton + confirmButton + '</div>' +\n                    '</div>';\n\n                var confirmationDialogue = new M.core.dialogue({\n                    headerContent: title,\n                    bodyContent: deleteDialogueContent,\n                    width: '600px',\n                    modal: true,\n                    visible: false,\n                    render: true,\n                    additionalBaseClass: 'snap_cover_image_delete_image_dialogue',\n                });\n                confirmationDialogue.show();\n                confirmationDialogue.after(\"visibleChange\", function() {\n                    if (!confirmationDialogue.get('visible')) {\n                        state1();\n                        confirmationDialogue.destroy(true);\n                    }\n                });\n\n                $('#delete_image_cancel_button').click(function(e) {\n                    e.preventDefault();\n                    confirmationDialogue.hide();\n                });\n                $('#delete_image_confirm_button').click(function(e) {\n                    e.preventDefault();\n                    var ajaxParams = {};\n                    if (categoryId !== null) {\n                        ajaxParams.categoryid = categoryId;\n                    } else if (courseShortName !== null) {\n                        ajaxParams.courseshortname = courseShortName;\n                    }\n                    ajaxParams.deleteimage = true;\n                    ajax.call([\n                        {\n                            methodname: 'theme_snap_cover_image',\n                            args: {params: ajaxParams},\n                            done: function() {\n                                temporalImageURL = 'none';\n                                temporalImageID = 0;\n                                temporalFileName = '';\n                                savedImageURL = 'none';\n                                cropper = null;\n                                state1();\n                                $('#page-header').removeClass('mast-image');\n                                $('#page-header .breadcrumb-item a').removeClass('mast-breadcrumb');\n                                $('#page-header').data('servercoverfile', 'none');\n                                $('#page-header').css('background-image', 'none');\n                                confirmationDialogue.hide();\n                            },\n                            fail: function(response) {\n                                ajaxNotify.ifErrorShowBestMsg(response);\n                            }\n                        }\n                    ], true, true);\n                });\n            });\n\n            $('body').addClass('cover-image-change');\n            $('label[for=\"snap-coverfiles\"]').addClass('ajaxing');\n\n            $('#id_snap_cover_image_browser').click(function(e) {\n                e.preventDefault();\n                showFilepicker('image', fpoptions, filepickerCallback(courseShortName, categoryId), dialogue);\n            });\n            $('#id_snap_cover_image_save_button').click(function() {\n                dialogue.hide();\n            });\n            $('.snap_cover_image_dialogue .closebutton, .moodle-dialogue-lightbox').click(function() {\n                cropper = null;\n                state1();\n            });\n            dialogue.after(\"visibleChange\", function() {\n                if ($('#snap-changecoverimageconfirmation .ok').hasClass('ajaxing')) {\n                    state2();\n                }\n                if (!dialogue.get('visible')) {\n                    dialogue.destroy(true);\n                }\n            });\n        };\n\n        /**\n         * Load the image in the preview box after being uploaded using the file picker.\n         * @param {object} params\n         * @param {string} courseShortName\n         * @param {int} categoryId\n         */\n        var loadPreviewImage = function(params, courseShortName, categoryId) {\n\n            var image = new Image();\n            image.onerror = function() {\n                var preview = document.getElementById('id_snap_cover_image_preview');\n                preview.setAttribute('style', 'display:none');\n            };\n\n            image.onload = function() {\n                var input;\n                var imageWidth = this.width;\n                input = document.getElementById('id_snap_cover_image_preview');\n                input.setAttribute('src', params.url);\n                input.setAttribute('style', 'display:block');\n                $('.snap_cover_image_save_button').removeClass(\"d-none\");\n\n                // Warn if image resolution is too small.\n                if (imageWidth < 1024) {\n                    $('#snap-alert-cover-image-size').remove();\n                    addCoverImageAlert('snap-alert-cover-image-size',\n                        M.util.get_string('error:coverimageresolutionlow', 'theme_snap'),\n                        'dialogue'\n                    );\n                } else {\n                    $('#snap-alert-cover-image-size').remove();\n                }\n\n                if (cropper !== null) {\n                    cropper.replace(params.url);\n                } else {\n                    // Initialize preview image cropper for the uploaded image.\n                    var imageToCrop = document.getElementById('id_snap_cover_image_preview');\n                    temporalImageURL = params.url;\n                    temporalFileName = params.file;\n                    if (params.id !== undefined) {\n                        temporalImageID = params.id;\n                    } else if (params.file !== undefined) {\n                        var fileNameWithoutSpaces = params.file.replace(/ .*/, \"\");\n                        var regex = new RegExp(\"draft\\\\/(\\\\d+)\\\\/\" + fileNameWithoutSpaces, \"g\");\n                        var urlId = params.url.match(regex);\n                        temporalImageID = urlId[0].match(/\\d+/)[0];\n                    }\n                    cropper = new Cropper(imageToCrop, {\n                        viewMode: 3,\n                        aspectRatio: cropperRatio,\n                        dragMode: \"none\",\n                        zoomable: false,\n                        minCropBoxWidth: 300,\n                    });\n                }\n                aspectRatioOptions();\n                $('.snap_cover_image_cropper_description').removeClass('d-none');\n                $('#id_snap_cover_image_save_button').click(function() {\n                    var croppedImage = cropper.getCroppedCanvas().toDataURL(\"image/png\");\n                    // Ensure that the page-header in courses has the mast-image class.\n                    $('.path-course-view #page-header').addClass('mast-image');\n                    $('.path-course-view #page-header .breadcrumb-item a').addClass('mast-breadcrumb');\n\n                    $('#page-header').css('background-image', 'url(' + croppedImage + ')');\n\n                    state2();\n                    saveImage(params, courseShortName, categoryId, cropper);\n                });\n\n            };\n            image.src = params.url;\n        };\n\n\n        /**\n         * Callback for file picker.\n         * @param {string} courseShortName\n         * @param {int} categoryId\n         */\n        var filepickerCallback = function(courseShortName, categoryId) {\n            return function(params) {\n            if (params.url !== '') {\n                temporalImageURL = params.url;\n                temporalFileName = params.file;\n                if (params.id !== undefined) {\n                    temporalImageID = params.id;\n                } else if (params.file !== undefined) {\n                    var fileNameWithoutSpaces = params.file.replace(/ .*/, \"\");\n                    var regex = new RegExp(\"draft\\\\/(\\\\d+)\\\\/\" + fileNameWithoutSpaces, \"g\");\n                    var urlId = params.url.match(regex);\n                    temporalImageID = urlId[0].match(/\\d+/)[0];\n                }\n                // Load the preview image.\n                loadPreviewImage(params, courseShortName, categoryId);\n                var ajaxParams = {};\n                ajaxParams.fileid = temporalImageID;\n                ajaxParams.imagefilename = temporalFileName;\n                ajaxParams.contrastvalidation = true;\n                if (categoryId !== null) {\n                    ajaxParams.categoryid = categoryId;\n                } else if (courseShortName !== null) {\n                    ajaxParams.courseshortname = courseShortName;\n                }\n                ajax.call([\n                    {\n                        methodname: 'theme_snap_cover_image',\n                        args: {params: ajaxParams},\n                        done: function(response) {\n                            $('#snap-alert-cover-image-contrast').remove();\n                            if (response.contrast) {\n                                addCoverImageAlert('snap-alert-cover-image-contrast', response.contrast,\n                                    'dialogue'\n                                );\n                            }\n                        },\n                        fail: function(response) {\n                            ajaxNotify.ifErrorShowBestMsg(response);\n                        }\n                    }\n                ], true, true);\n                }\n            };\n        };\n\n        /**\n         * Create file picker.\n         * @param {string} type\n         * @param {object} fpoptions\n         * @param {Function} callback\n         * @param {object} dialogue\n         */\n        var showFilepicker = function(type, fpoptions, callback, dialogue) {\n            Y.use('core_filepicker', function(Y) {\n                var options = fpoptions;\n                options.formcallback = callback;\n                M.core_filepicker.show(Y, options);\n            });\n            $('.filepicker .closebutton').click(function() {\n                dialogue.hide();\n                state1();\n            });\n        };\n\n        /**\n         * Save image after confirmation.\n         * @param {object} params\n         * @param {string} courseShortName\n         * @param {int} categoryId\n         * @param {object} cropper\n         */\n        var saveImage = function(params, courseShortName, categoryId, cropper) {\n\n            $('#snap-changecoverimageconfirmation .ok').off('click').click(function() {\n                var ajaxParams = {};\n\n                if (categoryId !== null) {\n                    ajaxParams.categoryid = categoryId;\n                } else if (courseShortName !== null) {\n                    ajaxParams.courseshortname = courseShortName;\n                } else {\n                    return;\n                }\n\n                if (params.id !== undefined) {\n                    ajaxParams.fileid = params.id;\n                } else if (params.file !== undefined) {\n                        var fileNameWithoutSpaces = params.file.replace(/ .*/, \"\");\n                        var regex = new RegExp(\"draft\\\\/(\\\\d+)\\\\/\" + fileNameWithoutSpaces, \"g\");\n                        var urlId = params.url.match(regex);\n                        ajaxParams.fileid = urlId[0].match(/\\d+/)[0];\n                } else {\n                    ajaxParams.fileid = temporalImageID;\n                }\n\n                if (params.file !== undefined) {\n                    ajaxParams.imagefilename = params.file;\n                } else {\n                    ajaxParams.imagefilename = temporalFileName;\n                }\n                if (params.url !== undefined) {\n                    ajaxParams.originalimageurl = params.url;\n                } else {\n                    ajaxParams.originalimageurl = temporalImageURL;\n                }\n\n                cropper.getCroppedCanvas().toBlob((blob) => {\n                    var reader = new FileReader();\n                    reader.readAsDataURL(blob);\n                    reader.onloadend = function() {\n                        var imageBase64Data = reader.result;\n                        ajaxParams.croppedimagedata = imageBase64Data;\n                        ajax.call([\n                            {\n                                methodname: 'theme_snap_cover_image',\n                                args: {params: ajaxParams},\n                                done: function(response) {\n                                    state1();\n                                    if (!response.success && response.warning) {\n                                        addCoverImageAlert('snap-alert-cover-image-upload-failed', response.warning);\n                                    }\n                                    var newUrl = getCroppedImageURL(response.imageurl);\n                                    savedImageURL = 'url(' + newUrl + ')';\n                                    temporalImageURL = 'none';\n                                    temporalImageID = 0;\n                                    temporalFileName = '';\n                                    $('#page-header').css('background-image', savedImageURL);\n                                    $('#page-header').addClass('mast-image');\n                                    $('#page-header .breadcrumb-item a').addClass('mast-breadcrumb');\n                                    $('#page-header').data('servercoverfile', $('#page-header').css('background-image'));\n                                    $('#snap-changecoverimageconfirmation .ok').off(\"click\");\n\n                                },\n                                fail: function(response) {\n                                    state1();\n                                    ajaxNotify.ifErrorShowBestMsg(response);\n                                }\n                            }\n                        ], true, true);\n                    };\n                });\n\n            });\n        };\n\n        /**\n         *\n         * @param {object} ajaxParams\n         * @param {string} courseShortName\n         * @param {int} categoryId\n         * @param {int} siteMaxBytes\n         */\n        var coverImage = function(ajaxParams, courseShortName = null, categoryId = null, siteMaxBytes) {\n\n            if (courseShortName === null && categoryId === null) {\n                return;\n            }\n\n            ajax.call([\n                {\n                    methodname: 'theme_snap_file_manager_options',\n                    args: [],\n                    done: function(data) {\n                        var fpoptions = JSON.parse(data.fpoptions);\n                        // Take a backup of what the current background image url is (if any).\n                        $('#page-header').data('servercoverfile', $('#page-header').css('background-image'));\n                        $('#snap-coverimagecontrol').addClass('snap-js-enabled');\n                        $('#snap-coverfiles').click(function() {\n                            moodledialogue(courseShortName, categoryId, fpoptions, siteMaxBytes);\n                        });\n                        // Cancel button listener\n                        $('#snap-changecoverimageconfirmation .cancel').click(function() {\n                            moodledialogue(courseShortName, categoryId, fpoptions, siteMaxBytes);\n                        });\n                    },\n                    fail: function() {\n                        return;\n                    }\n                }\n            ], true, true);\n        };\n\n        /**\n         * @param {int} categoryId\n         * @param {int} siteMaxBytes\n         */\n        var categoryCoverImage = function(categoryId, siteMaxBytes) {\n            var ajaxParams = {imagefilename: null, imagedata: null, categoryid: categoryId,\n                    courseshortname: null};\n            coverImage(ajaxParams, null, categoryId, siteMaxBytes);\n        };\n\n        /**\n         * @param {string} courseShortName\n         * @param {int} siteMaxBytes\n         */\n        var courseCoverImage = function(courseShortName, siteMaxBytes) {\n            var ajaxParams = {imagefilename: null, imagedata: null, categoryid: null,\n                    courseshortname: courseShortName};\n\n            coverImage(ajaxParams, courseShortName, null, siteMaxBytes);\n        };\n        return {courseImage: courseCoverImage, categoryImage: categoryCoverImage};\n    }\n);\n"],"names":["define","$","log","ajax","notification","ajaxNotify","Cropper","savedImageURL","css","temporalImageURL","temporalImageID","temporalFileName","cropper","cropperRatio","length","addCoverImageAlert","id","msg","position","alertPosition","closestr","M","util","get_string","before","state1","removeClass","remove","val","addClass","state2","aspectRatioOptions","setAspectRatio","moodledialogue","courseShortName","categoryId","fpoptions","siteMaxBytes","size","i","maxbytesstr","Math","floor","pow","toFixed","title","coverImageDesc","coverImageCropperDesc","coverImageSettingsWarning","browseRepositories","selectImageString","deleteImageString","previewDisplay","currentImageURL","currentImageUrl","replace","content","dialogue","core","headerContent","bodyContent","width","modal","visible","render","additionalBaseClass","show","imageToCrop","document","getElementById","viewMode","aspectRatio","dragMode","zoomable","minCropBoxWidth","click","getCroppedCanvas","croppedImage","toDataURL","saveImage","e","preventDefault","cancelString","confirmString","confirmDeleteString","cancelButton","confirmButton","hide","deleteDialogueContent","confirmationDialogue","after","get","destroy","ajaxParams","categoryid","courseshortname","deleteimage","call","methodname","args","params","done","data","fail","response","ifErrorShowBestMsg","showFilepicker","filepickerCallback","hasClass","url","file","undefined","fileNameWithoutSpaces","regex","RegExp","urlId","match","image","Image","onerror","setAttribute","onload","input","imageWidth","this","src","loadPreviewImage","fileid","imagefilename","contrastvalidation","contrast","type","callback","Y","use","options","formcallback","core_filepicker","off","originalimageurl","toBlob","blob","reader","FileReader","readAsDataURL","onloadend","imageBase64Data","result","croppedimagedata","success","warning","newUrl","imageurl","coverImage","JSON","parse","courseImage","imagedata","categoryImage"],"mappings":"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"}