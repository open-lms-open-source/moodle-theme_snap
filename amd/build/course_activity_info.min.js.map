{"version":3,"file":"course_activity_info.min.js","sources":["../src/course_activity_info.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to manage activity info in snap for tiles format\n *\n * @module     theme_snap/course_activity_info\n * @copyright  Copyright (c) 2023 Open LMS (https://www.openlms.net)\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\"jquery\", \"core/ajax\", \"theme_snap/ajax_notification\"], function (\n    $,\n    ajax,\n    ajaxNotify\n) {\n    var updateModCompletion = function (module, completionhtml) {\n        // Update completion tracking icon.\n        module.find(\".snap-asset-completion-tracking\").html(completionhtml);\n        module.find(\".btn-link\").focus();\n        $(document).trigger(\"snapModuleCompletionChange\", module);\n    };\n\n    /**\n     * Listen for manual completion toggle.\n     */\n    const listenManualCompletion = function () {\n        $(\".course-content\").on(\"submit\", \"form.togglecompletion\", function (e) {\n            e.preventDefault();\n            var form = $(this);\n\n            if (form.hasClass(\"ajaxing\")) {\n                // Request already in progress.\n                return;\n            }\n\n            var id = $(form).find('input[name=\"id\"]').val();\n            var completionState = $(form).find('input[name=\"completionstate\"]').val();\n            var module = $(form).parents(\"li.snap-asset\").first();\n            form.addClass(\"ajaxing\");\n\n            ajax.call(\n                [\n                    {\n                        methodname: \"theme_snap_course_module_completion\",\n                        args: { id: id, completionstate: completionState },\n                        done: function (response) {\n                            $(\"#module-\" + id + \" div.manual-completion-button\").html(\n                                response.completionhtml\n                            );\n                            ajaxNotify\n                                .ifErrorShowBestMsg(response)\n                                .done(function (errorShown) {\n                                    form.removeClass(\"ajaxing\");\n                                    if (errorShown) {\n                                        return;\n                                    } else {\n                                        // No errors, update completion html for this module instance.\n                                        updateModCompletion(module, response.completionhtml);\n                                    }\n                                });\n                        },\n                        fail: function (response) {\n                            ajaxNotify.ifErrorShowBestMsg(response).then(function () {\n                                form.removeClass(\"ajaxing\");\n                            });\n                        },\n                    },\n                ],\n                true,\n                true\n            );\n        });\n    };\n\n    const listenBtnReady = () => {\n        $(document).on(\"btnready\", () => {\n            $(\".manual-completion-button\").each((index, btn) => {\n                $(btn).hide();\n                const parent = $(btn).parents().filter('#' + btn.id);\n                if (parent.length > 0 && parent.attr('id') === btn.id) {\n                    $(btn).show();\n                }\n            });\n        });\n    };\n\n    return {\n        init: function () {\n            listenManualCompletion();\n            listenBtnReady();\n        }\n    };\n});\n"],"names":["define","$","ajax","ajaxNotify","listenManualCompletion","on","e","preventDefault","form","this","hasClass","id","find","val","completionState","module","parents","first","addClass","call","methodname","args","completionstate","done","response","html","completionhtml","ifErrorShowBestMsg","errorShown","removeClass","focus","document","trigger","updateModCompletion","fail","then","init","each","index","btn","hide","parent","filter","length","attr","show"],"mappings":";;;;;;;AAuBAA,yCAAO,CAAC,SAAU,YAAa,iCAAiC,SAC5DC,EACAC,KACAC,kBAYMC,uBAAyB,WAC3BH,EAAE,mBAAmBI,GAAG,SAAU,yBAAyB,SAAUC,GACjEA,EAAEC,qBACEC,KAAOP,EAAEQ,UAETD,KAAKE,SAAS,gBAKdC,GAAKV,EAAEO,MAAMI,KAAK,oBAAoBC,MACtCC,gBAAkBb,EAAEO,MAAMI,KAAK,iCAAiCC,MAChEE,OAASd,EAAEO,MAAMQ,QAAQ,iBAAiBC,QAC9CT,KAAKU,SAAS,WAEdhB,KAAKiB,KACD,CACI,CACIC,WAAY,sCACZC,KAAM,CAAEV,GAAIA,GAAIW,gBAAiBR,iBACjCS,KAAM,SAAUC,UACZvB,EAAE,WAAaU,GAAK,iCAAiCc,KACjDD,SAASE,gBAEbvB,WACKwB,mBAAmBH,UACnBD,MAAK,SAAUK,YACZpB,KAAKqB,YAAY,WACbD,YAtCV,SAAUb,OAAQW,gBAExCX,OAAOH,KAAK,mCAAmCa,KAAKC,gBACpDX,OAAOH,KAAK,aAAakB,QACzB7B,EAAE8B,UAAUC,QAAQ,6BAA8BjB,QAsClBkB,CAAoBlB,OAAQS,SAASE,oBAIrDQ,KAAM,SAAUV,UACZrB,WAAWwB,mBAAmBH,UAAUW,MAAK,WACzC3B,KAAKqB,YAAY,kBAKjC,GACA,cAiBL,CACHO,KAAM,WACFhC,yBAbJH,EAAE8B,UAAU1B,GAAG,YAAY,KACvBJ,EAAE,6BAA6BoC,MAAK,CAACC,MAAOC,OACxCtC,EAAEsC,KAAKC,aACDC,OAASxC,EAAEsC,KAAKvB,UAAU0B,OAAO,IAAMH,IAAI5B,IAC7C8B,OAAOE,OAAS,GAAKF,OAAOG,KAAK,QAAUL,IAAI5B,IAC/CV,EAAEsC,KAAKM"}